name: Database Migration Staging

on:
  workflow_dispatch:
  push:
    branches:
      - 'staging'
      - 'preview'
    paths:
      - 'prisma/**'

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DIRECT_URL: ${{ secrets.DIRECT_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  VITE_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.VITE_PUBLIC_SUPABASE_ANON_KEY }}
  VITE_PUBLIC_SUPABASE_URL: ${{ secrets.VITE_PUBLIC_SUPABASE_URL }}
  VITE_VERCEL_URL: ${{ secrets.VITE_VERCEL_URL }}
  NEXT_PUBLIC_STRIPE_PU: ${{ secrets.NEXT_PUBLIC_STRIPE_PU }}
  VITE_PUBLIC_STRIPE_PU: ${{ secrets.VITE_PUBLIC_STRIPE_PU }}

jobs:
  migrate:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    environment: preview
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-folder
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Generate prisma files
        run: pnpm prisma generate

      - name: Migrate Database
        run: pnpm prisma migrate deploy
